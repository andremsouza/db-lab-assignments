André Moreira Souza - 9778985
Mateus Castilho Leite - 9771550
Vinicius Henrique Borges - 9771546


Prática 5
SCC0541 - Laboratório de Bases de Dados


Exercício 1-
a.i. Entradas: 
GRANT SELECT ON TIME TO V9771546; -- USER1
SELECT * FROM A9778985.Time; -- USER2


Saídas:
Tuplas da tabela Time do USER1


a.ii.Entrada:
SELECT * FROM A9778985.Time; -- USER3


Saída:
ORA-00942: a tabela ou view não existe
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
Erro na linha: 1 Coluna: 24


a.iii. Entrada:
REVOKE SELECT ON TIME FROM V9771546; --USER1


a.iv. Entrada:
SELECT * FROM A9778985.Time; --USER2


Saída:
ORA-00942: a tabela ou view não existe
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
Erro na linha: 1 Coluna: 24


b.i. Entrada:
GRANT SELECT ON TIME TO V9771546 WITH GRANT OPTION; -- USER1
SELECT * FROM A9778985.Time; -- USER2




Saídas:
Tuplas da tabela Time do USER1


b.ii. Entrada:
GRANT select ON A9778985.Time TO M9771550;
b.iii. Entrada:
SELECT * FROM A9778985.Time; --USER3


Saída:
Tuplas da tabela Time do USER1 


b.iv. Entrada:
REVOKE SELECT ON TIME FROM V9771546; -- USER1


b.v. Entrada:
SELECT * FROM A9778985.Time; --USER2 e USER3


Saída:
ORA-00942: a tabela ou view não existe
00942. 00000 -  "table or view does not exist"
*Cause:    
*Action:
Erro na linha: 1 Coluna: 24  --USER2 e USER3


Exercício 2
GRANT SELECT, INSERT (NCADASTRO, NOME, TURNO)
ON SEGURANCA TO V9771546 WITH GRANT OPTION;
a. Entrada:
INSERT INTO A9778985.Seguranca (Ncadastro, Nome, Turno)
VALUES (54785, 'Richarlison', 'Manha');


Saída:
1 linha inserido.


b.i:
SELECT * FROM SEGURANCA WHERE Ncadastro = 54785; --USER1
SELECT * FROM SEGURANCA WHERE Ncadastro = 54785; --USER2
COMMIT; --USER2
SELECT * FROM SEGURANCA WHERE Ncadastro = 54785; --USER1
SELECT * FROM SEGURANCA WHERE Ncadastro = 54785; --USER2


b.ii:
Antes do commit:
USER1: A tupla inserida não se encontra no resultado.
USER2: A tupla inserida foi exibida corretamente.
Após o commit:
USER1: A tupla inserida foi exibida corretamente.
USER2: A tupla inserida foi exibida corretamente.


Isso acontece pois, antes do comando “commit”, a transação ainda não foi efetivada, logo os dados inseridos ainda não estão fisicamente na base de dados.


b.iii:
Os atributos sem permissão não puderam ser explicitamente inseridos e, consequentemente, foram exibidos como NULL.


c:
GRANT SELECT, INSERT (NCADASTRO, NOME, TURNO)
ON A9778985.Seguranca TO M9771550; --USER2
d.a:
INSERT INTO A9778985.Seguranca (NCadastro, Nome, Turno)
VALUES (200, 'Astolfo', 'Noite'); --USER3


d.b.i:
SELECT * FROM A9778985.Seguranca WHERE NCadastro = 200; --USER1
SELECT * FROM A9778985.Seguranca WHERE NCadastro = 200; --USER2
SELECT * FROM A9778985.Seguranca WHERE NCadastro = 200; --USER3
COMMIT; --USER3
SELECT * FROM A9778985.Seguranca WHERE NCadastro = 200; --USER1
SELECT * FROM A9778985.Seguranca WHERE NCadastro = 200; --USER2
SELECT * FROM A9778985.Seguranca WHERE NCadastro = 200; --USER3


d.b.ii:
Antes do commit:
USER1: A tupla inserida não se encontra no resultado.
USER2: A tupla inserida não se encontra no resultado.
USER3: A tupla inserida foi exibida corretamente.


Após o commit:
USER1: A tupla inserida foi exibida corretamente.
USER2: A tupla inserida foi exibida corretamente.
USER3: A tupla inserida foi exibida corretamente.


d.b.iii:
Os atributos sem permissão não puderam ser explicitamente inseridos e, consequentemente, foram exibidos como NULL.


e.Entrada:
REVOKE SELECT, INSERT ON SEGURANCA FROM V9771546; --USER1


Exercício 3
a)Entrada:
GRANT REFERENCES(PAIS) ON TIME TO V9771546; --USER1


b)Entrada: (USER2)
CREATE TABLE Time_Comentarios(
    Time VARCHAR2(100),
    ID_Fa NUMBER,
    Comentario VARCHAR2(500),
    
    CONSTRAINT PK_Time_Comentarios PRIMARY KEY (Time, ID_Fa, Comentario),
    CONSTRAINT FK_Time_Comentarios FOREIGN KEY (Time)
        REFERENCES A9778985.Time(Pais)
        ON DELETE CASCADE
);


c) Entrada: (USER2)
INSERT INTO Time_Comentarios
    VALUES ('Brasil', 789, 'Dunga burro');
    
INSERT INTO Time_Comentarios
    VALUES ('Argentina', 987, 'Maradona melhor que Pelé');
    
INSERT INTO Time_Comentarios
    VALUES ('Vietna', 456, 'Vai pra Cuba');


COMMIT;


Saída:
1 linha inserido.


1 linha inserido.


Erro a partir da linha : 17 no comando -
INSERT INTO Time_Comentarios
    VALUES ('Vietna', 456, 'Vai pra Cuba')
Relatório de erros -
ORA-02291: restrição de integridade (V9771546.FK_TIME_COMENTARIOS) violada - chave mãe não localizada


d) Entrada:
DELETE FROM TIME WHERE PAIS = 'Argentina'; --USER1
COMMIT; --USER1


Saída:
Devido à cláusula “ON DELETE CASCADE” na chave estrangeira da tabela criada, a remoção executada na tabela-pai implica na remoção das tuplas relacionadas da tabela-filha. Isso acontece apesar do USER2 não ter dado dado explicitamente a permissão de remoção para o USER1.


Exercício 4 
a) Entrada:
GRANT SELECT, INDEX ON JOGADOR TO M9771550; --USER1


b) Entrada:
CREATE INDEX IDX_Nome_Jogador ON A9778985.Jogador(Nome); --USER2


Explicação: a utilidade desse índice reside no fato de que o atributo Nome tem uma alta seletividade (muitos nomes possíveis) e, geralmente, a busca por jogadores é feita pelo nome, que anteriormente não tinha um índice. Além disso, consideramos a necessidade de se realizar consultas por intervalo envolvendo o nome do jogador, por exemplo, “exiba todos os jogadores cujo primeiro nome é ‘Ademar’”. O número FIFA, chave primária da tabela, dificilmente é utilizado para a busca de um jogador.


c) O índice criado pelo USER2 foi utilizado como esperado.
Entrada:
EXPLAIN PLAN FOR
SELECT *
from A9778985.Jogador J
where J.Nome like 'Ni%';
SELECT plan_table_output
FROM TABLE(dbms_xplan.display());


Saída:
Plan hash value: 11382876
 
------------------------------------------------------------------------------------------------
| Id  | Operation                       | Name                 | Rows  | Bytes | Cost (%CPU)| Time         |
------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                |                      |         1 |        66 |         3   (0)| 00:00:01 |
|   1 |  TABLE ACCESS BY INDEX ROWID| JOGADOR              |         1 |        66 |         3   (0)| 00:00:01 |
|*  2 |   INDEX RANGE SCAN              | IDX_NOME_JOGADOR |         1 |           |         2   (0)| 00:00:01 |
------------------------------------------------------------------------------------------------
 
Predicate Information (identified by operation id):
---------------------------------------------------
 
   2 - access("J"."NOME" LIKE 'Ni%')
         filter("J"."NOME" LIKE 'Ni%')


d) O índice está armazenado no esquema do USER2, criador do índice, contudo quando a consulta é feita pelo USER1 ele também é usado. Isso ocorre pois a utilização do índice independe dos usuários envolvidos, cabe ao planejador de consultas do SGBD decidir se utiliza o índice existente ou não. Por esses motivos, e como pode ser observado na documentação, não existem privilégios de utilização de índices.